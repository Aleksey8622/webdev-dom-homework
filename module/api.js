import { currentDate } from "./helpers.js";
import { now } from "./main.js";
import { renderChangingMarkup } from "./render.js";
import { format } from "date-fns";

const textElementsLoad = document.querySelector(".text-load");
const inputName = document.getElementById("form-name");
const inputComments = document.getElementById("form-text");
const button = document.querySelector(".add-form-button");
const loadingElements = document.querySelector(".loading-add");

const url = "https://wedev-api.sky.pro/api/v2/Aleksey-Rudnev/comments/";
const userUrl = "https://wedev-api.sky.pro/api/user/login";

export let token;
export function userToken(newToken) {
  token = newToken;
}

export let id;
console.log("üöÄ ~ file: api.js:20 ~ id:", id)
export function userId(newId) {
  id = newId;
}

export let name;
console.log("üöÄ ~ file: api.js:20 ~ name:", name)

export function userName(newName) {
  name = newName
}

export { arrayOfComments };
// –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ API

let arrayOfComments = [
  // {
  //   name: '–ì–ª–µ–± –§–æ–∫–∏–Ω',
  //   time: '12.02.22 12:18',
  //   comment: '–≠—Ç–æ –±—É–¥–µ—Ç –ø–µ—Ä–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
  //   likes: 3,
  //   islover: false,
  //   isEdit: true,
  // },
  // {
  //   name: '–í–∞—Ä–≤–∞—Ä–∞ –ù.',
  //   time: '13.02.22 19:22',
  //   comment: '–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –∫–∞–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞! ‚ù§',
  //   likes: 75,
  //   islover: false,
  //   isEdit: true,
  // }
];

// –§—É–Ω–∫—Ü–∏—è Fetch() –ø–æ–ª—É—á–∞–µ–º –∏–∑ API —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ GET –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
export const addedComments = () => {
  return fetch(url, {
    method: "GET",
    headers: {
      Authorization: `Bearer ${token}`,
    },
  })
    .then((response) => {
      return response.json();
    })
    .then((response) => {
      textElementsLoad.style.display = "none";
      return response;
    })
    .then((responseCommets) => {


      const massComments = responseCommets.comments.map((comment) => {
        return {
          name: comment.author.name,
          date: format(now, 'yyyy-MM-dd hh.mm.ss'),
          text: comment.text,
          likes: comment.likes,
          islover: false,
          isEdit: false,
          id: comment.id,
        };
      });

      arrayOfComments = massComments;
      renderChangingMarkup();

      console.log(arrayOfComments);
    })
    // .catch((error) => {
    //   alert("–ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å —Å–ª–æ–º–∞–ª—Å—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç");
    //   console.error(error);
    // });
};

// –û—Ç–¥–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ POST –∑–∞–ø—Ä–æ—Å –≤ API
export const addTodo = (name, text) => {
  return fetch(url, {
    method: "POST",
    headers: {
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify({
      text: text
        .replaceAll("&", "&amp;")
        .replaceAll("<", "&lt;")
        .replaceAll(">", "&gt;")
        .replaceAll('"', "&quot;"),
      name: name
        .replaceAll("&", "&amp;")
        .replaceAll("<", "&lt;")
        .replaceAll(">", "&gt;")
        .replaceAll('"', "&quot;"),
      forceError: true,
    }),
  });
};

// –ú–µ—Ç–æ–¥ fetch() –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ API –Ω–∞ –¥–æ–±–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö c —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Å–ø–∏—Å–∫–µ
export const sedingsServer = () => {
  const formElements = document.getElementById("add-form");
  const inputName = document.getElementById("form-name");
  const inputComments = document.getElementById("form-text");
  const loadingElements = document.querySelector(".loading-add");
  loadingElements.style.display = "block";
  formElements.style.display = "none";

  // –§—É–Ω–∫—Ü–∏—è AddTodo –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ POST –∑–∞–ø—Ä–æ—Å–∞
  addTodo(inputName.value, inputComments.value)
    .then((response) => {
      return response;
    })
    // –°–æ–∑–¥–∞–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π then –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ if/else –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –º–µ—Ç–æ–¥–æ–º throw new Error() –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤ catch()
    .then((responseData) => {
      if (responseData.status === 201) {
        return responseData.json();
      } else if (responseData.status === 400) {
        throw new Error("–ù–µ –≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥");
      } else if (responseData.status === 500) {
        console.log(responseData.status);
        throw new Error("–°–ª–æ–º–∞–ª—Å—è —Å–µ—Ä–≤–µ—Ä");
      } else {
        throw new Error("–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç");
      }
    })
    .then(() => {
      return addedComments(); // –í—ã–∑–æ–≤ –ø–æ–≤—Ç–æ—Ä–Ω–æ –º–µ—Ç–æ–¥ GET –≤ –º–µ—Ç–æ–¥–µ POST –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –¥–æ–±–∞–≤–ª—è–ª—Å—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    })
    .then(() => {
      button.disabled = true;
      inputName.value = "";
      inputComments.value = "";
      loadingElements.style.display = "none";
      formElements.style.display = "flex";
    })
    .catch((error) => {
      loadingElements.style.display = "none";
      formElements.style.display = "flex";
      if (error.message === "–ù–µ –≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥") {
        alert("–ò–º—è –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–µ –∫–æ—Ä–æ—á–µ 3 —Å–∏–º–≤–æ–ª–æ–≤");
      } else if (error.message === "–°–ª–æ–º–∞–ª—Å—è —Å–µ—Ä–≤–µ—Ä") {
        addTodoError();
      }
        // alert("–°–µ—Ä–≤–µ—Ä —Å–ª–æ–º–∞–ª—Å—è, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ")
      // } else {
      //   alert("–ö–∞–∂–µ—Ç—Å—è, —É –≤–∞—Å —Å–ª–æ–º–∞–ª—Å—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ");
      // }
    });
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏ 500 –æ—à–∏–±–∫–∏ API
export function addTodoError() {
  addTodo(inputName.value, inputComments.value)
    .then((response) => {
      return response;
    }) // –°–æ–∑–¥–∞–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π then –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ if/else –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –º–µ—Ç–æ–¥–æ–º throw new Error() –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤ catch()
    .then((responseData) => {
      console.log(responseData);
      if (responseData.status === 500) {
        throw new Error("–°–ª–æ–º–∞–ª—Å—è —Å–µ—Ä–≤–µ—Ä");
      } else {
        return responseData.json();
      }
    })
    .then(() => {
      return addedComments();
    })
    .then(() => {
      button.disabled = true;
      inputName.value = "";
      inputComments.value = "";
      loadingElements.style.display = "none";
      formElements.style.display = "flex";
    })
    .catch((error) => {
      alert(
        "–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–µ–ª–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å!!!!!!!!!"
      );
      loadingElements.style.display = "block";
      formElements.style.display = "none";
      addTodoError();
    });
}

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
export function deleteTodo({ id }) {
  console.log("üöÄ ~ file: api.js:203 ~ id:", id)
  return fetch("https://wedev-api.sky.pro/api/v2/Aleksey-Rudnev/comments/" + id, {
    method: "DELETE",
    headers: {
      Authorization: `Bearer ${token}`,
    }
  })
    .then((response) => {
      console.log("üöÄ ~ file: api.js:210 ~ .then ~ response:", response)
      return response.json();
    });
}
// –§—É–Ω–∫—Ü–∏—è login –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

export const login = ({ login, password }) => {
  return fetch(userUrl, {
    method: "POST",
    body: JSON.stringify({
      login,
      password,
    }),
  }).then((responseData) => {
    if (responseData.status === 201) {
      return responseData.json();
    } else if (responseData.status === 400) {
      throw new Error("–ù–µ –≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å");
    }
  }).catch((error) => {
    if (error.message === "–ù–µ –≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å") {
      alert("–í–≤–µ–¥–µ–Ω –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!")
    }
  })
};
